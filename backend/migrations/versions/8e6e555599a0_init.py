"""init

Revision ID: 8e6e555599a0
Revises: 
Create Date: 2025-09-03 05:50:03.791894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8e6e555599a0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dataset_files_id'), 'dataset_files', ['id'], unique=False)
    op.drop_index(op.f('ix_dataset_columns_id'), table_name='dataset_columns')
    op.drop_table('dataset_columns')
    op.add_column('datasets', sa.Column('uploaded_at', sa.DateTime(), nullable=True))
    op.add_column('datasets', sa.Column('user_id', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('datasets_uploaded_by_fkey'), 'datasets', type_='foreignkey')
    op.create_foreign_key(None, 'datasets', 'users', ['user_id'], ['id'])
    op.drop_column('datasets', 'uploaded_by')
    op.drop_column('datasets', 'created_at')
    op.add_column('experiment_artifacts', sa.Column('data', sa.LargeBinary(), nullable=True))
    op.alter_column('experiment_artifacts', 'artifact_path',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.drop_column('experiments', 'model_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('experiments', sa.Column('model_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('experiment_artifacts', 'artifact_path',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('experiment_artifacts', 'data')
    op.add_column('datasets', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('datasets', sa.Column('uploaded_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'datasets', type_='foreignkey')
    op.create_foreign_key(op.f('datasets_uploaded_by_fkey'), 'datasets', 'users', ['uploaded_by'], ['id'])
    op.drop_column('datasets', 'user_id')
    op.drop_column('datasets', 'uploaded_at')
    op.create_table('dataset_columns',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dataset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dtype', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], name=op.f('dataset_columns_dataset_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('dataset_columns_pkey'))
    )
    op.create_index(op.f('ix_dataset_columns_id'), 'dataset_columns', ['id'], unique=False)
    op.drop_index(op.f('ix_dataset_files_id'), table_name='dataset_files')
    op.drop_table('dataset_files')
    # ### end Alembic commands ###
